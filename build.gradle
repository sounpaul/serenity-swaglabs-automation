buildscript {
    repositories {
        mavenCentral()
    }

    ext {
        serenityVersion = '4.2.1'
        lombokVersion = '1.18.34'
        logbackVersion = '1.4.12'
        junit_platform_launcher_version="1.11.0"
        cucumber_junit_platform_engine_version="7.16.1"
        junit_platform_suite_version="1.11.0"
        junit_jupiter_engine_version="5.11.0"
        junit_vintage_engine_version="5.11.0"
    }

    dependencies {
        classpath "net.serenity-bdd:serenity-single-page-report:${serenityVersion}"
    }
}

plugins {
    id 'java'
    id 'net.serenity-bdd.serenity-gradle-plugin' version "${serenityVersion}"
}
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

group = 'com.swaglabs.automation'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "net.serenity-bdd:serenity-rest-assured:${serenityVersion}"
    testImplementation "net.serenity-bdd:serenity-cucumber:${serenityVersion}"
    testImplementation "org.junit.platform:junit-platform-launcher:${junit_platform_launcher_version}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumber_junit_platform_engine_version}"
    testImplementation "org.junit.platform:junit-platform-suite:${junit_platform_suite_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_engine_version}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${junit_vintage_engine_version}"
    testImplementation "ch.qos.logback:logback-classic:${logbackVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

configurations {
    testImplementation.extendsFrom implementation
    testRuntime.extendsFrom runtime
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    test {
        java
        resources
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

tasks.register('runTest', Test) {
    useJUnitPlatform()
    finalizedBy('aggregate')
    group = 'verification'
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    systemProperties(System.getProperties())
    testLogging {
        showStandardStreams = true
    }
}

serenity {
    reports = ["single-page-html"]
}

runTest.finalizedBy('reports')

clean.doFirst {
    delete "${rootDir}/videos"
}